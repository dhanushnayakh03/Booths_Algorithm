$date
	Mon Jul 07 09:06:49 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module testbench $end
$var wire 1 ! busy $end
$var wire 16 " ab [15:0] $end
$var reg 8 # a [7:0] $end
$var reg 8 $ b [7:0] $end
$var reg 1 % clk $end
$var reg 1 & start $end
$scope module inst1 $end
$var wire 8 ' Multiplicand [7:0] $end
$var wire 8 ( Multiplier [7:0] $end
$var wire 1 % clk $end
$var wire 1 & start $end
$var reg 8 ) A [7:0] $end
$var reg 8 * M [7:0] $end
$var reg 8 + Q [7:0] $end
$var reg 1 , Q_1 $end
$var reg 16 - Result [15:0] $end
$var reg 4 . count [3:0] $end
$var reg 1 ! in_process $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
bx .
bx -
x,
bx +
bx *
bx )
b1001 (
b1001 '
1&
0%
b1001 $
b1001 #
bx "
x!
$end
#5
b0 "
b0 -
1!
b0 .
0,
b1001 *
b1001 +
b0 )
1%
#10
0%
0&
#15
b1 .
b10000100 +
1,
b11111011 )
1%
#20
0%
#25
b10 .
b1000010 +
0,
b10 )
1%
#30
0%
#35
b11 .
b1 )
b100001 +
1%
#40
0%
#45
b100 .
b10000 +
1,
b11111100 )
1%
#50
0%
#55
b101 .
b10001000 +
0,
b10 )
1%
#60
0%
#65
b110 .
b1 )
b1000100 +
1%
#70
0%
#75
b111 .
b0 )
b10100010 +
1%
#80
0%
#85
b1010001 "
b1010001 -
0!
b1000 .
b1010001 +
1%
#90
0%
#95
1%
#100
0%
#105
1%
#110
0%
1&
b110 $
b110 (
b11111011 #
b11111011 '
#115
b0 "
b0 -
1!
b0 .
b11111011 *
b110 +
1%
#120
0%
0&
#125
b1 .
b11 +
1%
#130
0%
#135
b10 .
b10000001 +
1,
b10 )
1%
#140
0%
#145
b11 .
b1 )
b1000000 +
1%
#150
0%
#155
b100 .
b100000 +
0,
b11111110 )
1%
#160
0%
#165
b101 .
b11111111 )
b10000 +
1%
#170
0%
#175
b110 .
b10001000 +
1%
#180
0%
#185
b111 .
b11000100 +
1%
#190
0%
#195
b1111111111100010 "
b1111111111100010 -
0!
b1000 .
b11100010 +
1%
#200
0%
#205
1%
#210
0%
#215
1%
#220
0%
1&
b11111001 $
b11111001 (
b1100 #
b1100 '
#225
b0 "
b0 -
1!
b0 .
b1100 *
b11111001 +
b0 )
1%
#230
0%
0&
#235
b1 .
b1111100 +
1,
b11111010 )
1%
#240
0%
#245
b10 .
b111110 +
0,
b11 )
1%
#250
0%
#255
b11 .
b1 )
b10011111 +
1%
#260
0%
#265
b100 .
b11001111 +
1,
b11111010 )
1%
#270
0%
#275
b101 .
b11111101 )
b1100111 +
1%
#280
0%
#285
b110 .
b11111110 )
b10110011 +
1%
#290
0%
#295
b111 .
b11111111 )
b1011001 +
1%
#300
0%
#305
b1111111110101100 "
b1111111110101100 -
0!
b1000 .
b10101100 +
1%
#310
0%
#315
1%
#320
0%
#325
1%
#330
0%
1&
b11111000 $
b11111000 (
b11111000 #
b11111000 '
#335
b0 "
b0 -
1!
b0 .
0,
b11111000 *
b11111000 +
b0 )
1%
#340
0%
0&
#345
b1 .
b1111100 +
1%
#350
0%
#355
b10 .
b111110 +
1%
#360
0%
#365
b11 .
b11111 +
1%
#370
0%
#375
b100 .
b1111 +
1,
b100 )
1%
#380
0%
#385
b101 .
b10 )
b111 +
1%
#390
0%
#395
b110 .
b1 )
b11 +
1%
#400
0%
#405
b111 .
b0 )
b10000001 +
1%
#410
0%
#415
b1000000 "
b1000000 -
0!
b1000 .
b1000000 +
1%
#420
0%
#425
1%
#430
0%
#435
1%
#440
0%
